//// [tests/cases/compiler/inferTypePredicateExplicit.ts] ////

=== inferTypePredicateExplicit.ts ===
function isNonNullExplicit(x: number | null) {
>isNonNullExplicit : Symbol(isNonNullExplicit, Decl(inferTypePredicateExplicit.ts, 0, 0))
>x : Symbol(x, Decl(inferTypePredicateExplicit.ts, 0, 27))

  const ok = x !== null;
>ok : Symbol(ok, Decl(inferTypePredicateExplicit.ts, 1, 7))
>x : Symbol(x, Decl(inferTypePredicateExplicit.ts, 0, 27))

  if (ok) {
>ok : Symbol(ok, Decl(inferTypePredicateExplicit.ts, 1, 7))

    let t: number = x;
>t : Symbol(t, Decl(inferTypePredicateExplicit.ts, 3, 7))
>x : Symbol(x, Decl(inferTypePredicateExplicit.ts, 0, 27))
  }
  return ok;
>ok : Symbol(ok, Decl(inferTypePredicateExplicit.ts, 1, 7))
}

