//// [tests/cases/compiler/inferTypePredicateFocus.ts] ////

=== inferTypePredicateFocus.ts ===
const numsOrNull = [1, 2, 3, 4, null];
>numsOrNull : (number | null)[]
>[1, 2, 3, 4, null] : (number | null)[]
>1 : 1
>2 : 2
>3 : 3
>4 : 4

const filteredNums = numsOrNull.filter(x => !!x);
>filteredNums : (number | null)[]
>numsOrNull.filter(x => !!x) : (number | null)[]
>numsOrNull.filter : { <S extends number | null>(predicate: (value: number | null, index: number, array: (number | null)[]) => value is S, thisArg?: any): S[]; (predicate: (value: number | null, index: number, array: (number | null)[]) => unknown, thisArg?: any): (number | null)[]; }
>numsOrNull : (number | null)[]
>filter : { <S extends number | null>(predicate: (value: number | null, index: number, array: (number | null)[]) => value is S, thisArg?: any): S[]; (predicate: (value: number | null, index: number, array: (number | null)[]) => unknown, thisArg?: any): (number | null)[]; }
>x => !!x : (x: number | null) => boolean
>x : number | null
>!!x : boolean
>!x : boolean
>x : number | null

